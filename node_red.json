[
    {
        "id": "4be8e50aa2549785",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b9e2bf24c453c40c",
        "type": "serial-port",
        "name": "",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "0d09cf54133cf472",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt-dashboard.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d653ad75737c7fcd",
        "type": "inject",
        "z": "4be8e50aa2549785",
        "name": "",
        "props": [],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "56a9633428e10a33"
            ]
        ]
    },
    {
        "id": "1b6295babea4faac",
        "type": "debug",
        "z": "4be8e50aa2549785",
        "name": "json completo",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 240,
        "wires": []
    },
    {
        "id": "56a9633428e10a33",
        "type": "http request",
        "z": "4be8e50aa2549785",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/api/items",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 120,
        "y": 140,
        "wires": [
            [
                "1b6295babea4faac",
                "17bf2daeca11de29"
            ]
        ]
    },
    {
        "id": "17bf2daeca11de29",
        "type": "function",
        "z": "4be8e50aa2549785",
        "name": "Pegar dados vitais Primeiro Paciente",
        "func": "let dados = msg.payload;\nlet cpf_primeiro_paciente = Object.keys(dados)[0];\nlet primeiro_paciente = dados[cpf_primeiro_paciente];\nlet tamanho = primeiro_paciente[\"Ciclo\"].length;\n\nmsg.payload = {\n    \"Pressao\":primeiro_paciente[\"Pressao\"][tamanho - 1],\n    \"Temperatura\": primeiro_paciente[\"Temperatura\"][tamanho - 1],\n    \"Batimentos\": primeiro_paciente[\"Batimentos\"][tamanho - 1]\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "86d87623f1168e33",
                "7a71aba3daab0d16",
                "f9eab40def56fb28"
            ]
        ]
    },
    {
        "id": "86d87623f1168e33",
        "type": "debug",
        "z": "4be8e50aa2549785",
        "name": "dados vitais primeiro paciente",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "f055b037a643c3b2",
        "type": "debug",
        "z": "4be8e50aa2549785",
        "name": "dados vitais em int",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 130,
        "y": 340,
        "wires": []
    },
    {
        "id": "7a71aba3daab0d16",
        "type": "function",
        "z": "4be8e50aa2549785",
        "name": "Converter string para float",
        "func": "let dados = msg.payload;\nlet pressao_1 = dados[\"Pressao\"].slice(0, 2);\nlet pressao_2 = dados[\"Pressao\"].slice(3, 4);\n\n\nmsg.payload = {\n    \"Pressao_1\": parseInt(pressao_1),\n    \"Pressao_2\": parseInt(pressao_2),\n    \"Temperatura\": parseInt(dados[\"Temperatura\"]),\n    \"Batimentos\": parseInt(dados[\"Batimentos\"])\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 240,
        "wires": [
            [
                "d34ed4a38941fe87",
                "f055b037a643c3b2"
            ]
        ]
    },
    {
        "id": "d34ed4a38941fe87",
        "type": "serial out",
        "z": "4be8e50aa2549785",
        "name": "",
        "serial": "b9e2bf24c453c40c",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "f9eab40def56fb28",
        "type": "mqtt out",
        "z": "4be8e50aa2549785",
        "name": "",
        "topic": "grupo4/paciente/dados_vitais",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0d09cf54133cf472",
        "x": 660,
        "y": 200,
        "wires": []
    }
]